// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
	user_id Int @id @default(autoincrement())
	login String
	nickname String
	password String
	avatar String?
	status Status @default(OFFLINE)
	two_factor_auth String?
	creation_date DateTime?
	current_lobby String?
	is_banned Boolean?
	KDA	Decimal?
	games_lost Game[] @relation("winner")
	games_won Game[] @relation ("loser")
	achievements Achievement[] @relation("user_achievements")
	friends User[] @relation("friends")
	friends_relation User[] @relation("friends")
	friend_requests User[] @relation("friend_request")
	friends_request_relation User[] @relation("friend_request")
	rooms_created Room[] @relation("chat_creator")
	messages_sent Message[] @relation("message_user")
	chats_member Room[] @relation("chat_user")
	banned_from Room[] @relation("chat_banned_users")
	player_level Float?
	winrate Float?

	@@unique([login])
	@@unique([nickname])
}

model Game {
	game_id Int @id @default(autoincrement())
	game_date DateTime
	game_winner_id Int
	game_loser_id Int
	game_winner User? @relation("winner", fields: [game_winner_id], references: [user_id])
	game_loser User? @relation("loser", fields: [game_loser_id], references: [user_id])
	game_winner_score Int?
	game_loser_score Int?
}


model Achievement {
	achievements_id Int @id @default(autoincrement())
	achievement_name Achievements_name
	achievement_image String
	achievement_user User[] @relation("user_achievements")
}

model Room {
	chat_id Int @id @default(autoincrement())
	chat_password String?
	chat_name String
	chat_private Boolean
	chat_creation_date DateTime
	chat_creator_id Int
	chat_creator User @relation("chat_creator", fields: [chat_creator_id], references: [user_id])
	chat_messages Message[] @relation("message_chat")
	chat_users User[] @relation("chat_user")
	chat_banned_users User[] @relation("chat_banned_users")
}

model Message {
	message_id Int @id @default(autoincrement())
	message_content String
	message_time DateTime
	message_user_id Int
	message_user User @relation("message_user", fields: [message_user_id], references: [user_id])
	message_chat_id Int
	message_chat Room @relation("message_chat", fields: [message_chat_id], references: [chat_id])
}

enum Status {
	OFFLINE
	ONLINE
	INGAME
}

enum Achievements_name {
	TheAddict
	WinStreak
}